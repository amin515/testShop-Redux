{"ast":null,"code":"// brand actions\n\nimport axios from \"axios\";\nimport { CREATE_BRANDS_FAILED, CREATE_BRANDS_REQUEST, CREATE_BRANDS_SUCCESS, DELETE_BRAND_FAILED, DELETE_BRAND_REQUEST, DELETE_BRAND_SUCCESS, GET_BRANDS_FAILED, GET_BRANDS_REQUEST, GET_BRANDS_SUCCESS, UPDATE_BRAND_SUCCESS } from \"./actionTypes.js\";\n\n// get all brands\nexport const getAllBrand = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_BRANDS_REQUEST\n    });\n    await axios.get(\"http://localhost:5050/api/v1/product/brands\").then(res => {\n      dispatch({\n        type: GET_BRANDS_SUCCESS,\n        payload: res.data.brand\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_BRANDS_FAILED,\n        payload: err.message\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_BRANDS_FAILED,\n      payload: error.message\n    });\n  }\n};\n\n// create brands\nexport const createBrand = _ref => {\n  let {\n    data,\n    setLogo,\n    setBrandModal,\n    setInput\n  } = _ref;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_BRANDS_REQUEST\n      });\n      await axios.post(\"http://localhost:5050/api/v1/product/brands\", data).then(res => {\n        dispatch({\n          type: CREATE_BRANDS_SUCCESS,\n          payload: res.data.brand\n        });\n        setBrandModal(false);\n        setLogo(null);\n        setInput(\"\");\n      }).catch(err => {\n        dispatch({\n          type: CREATE_BRANDS_FAILED,\n          payload: err.message\n        });\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_BRANDS_FAILED,\n        payload: error.message\n      });\n    }\n  };\n};\n\n// delete brands\nexport const deleteBrand = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_BRAND_REQUEST\n    });\n    await axios.delete(`http://localhost:5050/api/v1/product/brands/${id}`).then(res => {\n      dispatch({\n        type: DELETE_BRAND_SUCCESS,\n        payload: id\n      });\n    }).catch(err => {\n      dispatch({\n        type: DELETE_BRAND_FAILED,\n        payload: err.message\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_BRAND_FAILED,\n      payload: error.message\n    });\n  }\n};\nexport const updateStatus = _ref2 => {\n  let {\n    id,\n    status\n  } = _ref2;\n  return async dispatch => {\n    try {\n      await axios.patch(`/api/v1/product/brands-status/${id}`, {\n        status\n      }).then(res => {\n        dispatch({\n          type: UPDATE_BRAND_SUCCESS,\n          payload: res.data.brand\n        });\n      }).catch();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"names":["axios","CREATE_BRANDS_FAILED","CREATE_BRANDS_REQUEST","CREATE_BRANDS_SUCCESS","DELETE_BRAND_FAILED","DELETE_BRAND_REQUEST","DELETE_BRAND_SUCCESS","GET_BRANDS_FAILED","GET_BRANDS_REQUEST","GET_BRANDS_SUCCESS","UPDATE_BRAND_SUCCESS","getAllBrand","dispatch","type","get","then","res","payload","data","brand","catch","err","message","error","createBrand","_ref","setLogo","setBrandModal","setInput","post","deleteBrand","id","delete","updateStatus","_ref2","status","patch","console","log"],"sources":["H:/testShop/redux-shop/src/redux/reduxAction/action.js"],"sourcesContent":["// brand actions\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  CREATE_BRANDS_FAILED,\r\n  CREATE_BRANDS_REQUEST,\r\n  CREATE_BRANDS_SUCCESS,\r\n  DELETE_BRAND_FAILED,\r\n  DELETE_BRAND_REQUEST,\r\n  DELETE_BRAND_SUCCESS,\r\n  GET_BRANDS_FAILED,\r\n  GET_BRANDS_REQUEST,\r\n  GET_BRANDS_SUCCESS,\r\n  UPDATE_BRAND_SUCCESS,\r\n} from \"./actionTypes.js\";\r\n\r\n// get all brands\r\nexport const getAllBrand = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GET_BRANDS_REQUEST });\r\n    await axios\r\n      .get(\"http://localhost:5050/api/v1/product/brands\")\r\n      .then((res) => {\r\n        dispatch({ type: GET_BRANDS_SUCCESS, payload: res.data.brand });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: GET_BRANDS_FAILED, payload: err.message });\r\n      });\r\n  } catch (error) {\r\n    dispatch({ type: GET_BRANDS_FAILED, payload: error.message });\r\n  }\r\n};\r\n\r\n// create brands\r\nexport const createBrand =\r\n  ({ data, setLogo, setBrandModal, setInput }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: CREATE_BRANDS_REQUEST });\r\n      await axios\r\n        .post(\"http://localhost:5050/api/v1/product/brands\", data)\r\n        .then((res) => {\r\n          dispatch({ type: CREATE_BRANDS_SUCCESS, payload: res.data.brand });\r\n          setBrandModal(false);\r\n          setLogo(null);\r\n          setInput(\"\");\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: CREATE_BRANDS_FAILED, payload: err.message });\r\n        });\r\n    } catch (error) {\r\n      dispatch({ type: CREATE_BRANDS_FAILED, payload: error.message });\r\n    }\r\n  };\r\n\r\n// delete brands\r\nexport const deleteBrand = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_BRAND_REQUEST });\r\n    await axios\r\n      .delete(`http://localhost:5050/api/v1/product/brands/${id}`)\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_BRAND_SUCCESS, payload: id });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: DELETE_BRAND_FAILED, payload: err.message });\r\n      });\r\n  } catch (error) {\r\n    dispatch({ type: DELETE_BRAND_FAILED, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const updateStatus = ({id, status}) => async(dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/v1/product/brands-status/${id}`, {\r\n      status\r\n    }).then( res => {\r\n      dispatch({type : UPDATE_BRAND_SUCCESS, payload : res.data.brand})\r\n    }).catch()\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}